/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class DriverCreator {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DriverCreator(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DriverCreator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_DriverCreator(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ConstString toString_c() {
    return new ConstString(yarpJNI.DriverCreator_toString_c(swigCPtr, this), true);
  }

  public DeviceDriver create() {
    long cPtr = yarpJNI.DriverCreator_create(swigCPtr, this);
    return (cPtr == 0) ? null : new DeviceDriver(cPtr, false);
  }

  public ConstString getName() {
    return new ConstString(yarpJNI.DriverCreator_getName(swigCPtr, this), true);
  }

  public ConstString getWrapper() {
    return new ConstString(yarpJNI.DriverCreator_getWrapper(swigCPtr, this), true);
  }

  public ConstString getCode() {
    return new ConstString(yarpJNI.DriverCreator_getCode(swigCPtr, this), true);
  }

  public PolyDriver owner() {
    long cPtr = yarpJNI.DriverCreator_owner(swigCPtr, this);
    return (cPtr == 0) ? null : new PolyDriver(cPtr, false);
  }

}
